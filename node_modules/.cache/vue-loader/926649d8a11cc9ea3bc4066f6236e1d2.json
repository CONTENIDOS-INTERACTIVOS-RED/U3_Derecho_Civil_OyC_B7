{"remainingRequest":"/home/runner/work/U3_Derecho_Civil_OyC_B7/U3_Derecho_Civil_OyC_B7/node_modules/vue-loader/lib/index.js??vue-loader-options!/home/runner/work/U3_Derecho_Civil_OyC_B7/U3_Derecho_Civil_OyC_B7/src/views/curso/Tema4.vue?vue&type=template&id=26d54f2c&lang=pug&","dependencies":[{"path":"/home/runner/work/U3_Derecho_Civil_OyC_B7/U3_Derecho_Civil_OyC_B7/src/views/curso/Tema4.vue","mtime":1747580743994},{"path":"/home/runner/work/U3_Derecho_Civil_OyC_B7/U3_Derecho_Civil_OyC_B7/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U3_Derecho_Civil_OyC_B7/U3_Derecho_Civil_OyC_B7/node_modules/vue-loader/lib/loaders/templateLoader.js","mtime":499162500000},{"path":"/home/runner/work/U3_Derecho_Civil_OyC_B7/U3_Derecho_Civil_OyC_B7/node_modules/pug-plain-loader/index.js","mtime":499162500000},{"path":"/home/runner/work/U3_Derecho_Civil_OyC_B7/U3_Derecho_Civil_OyC_B7/node_modules/cache-loader/dist/cjs.js","mtime":499162500000},{"path":"/home/runner/work/U3_Derecho_Civil_OyC_B7/U3_Derecho_Civil_OyC_B7/node_modules/vue-loader/lib/index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},null]}